{
    "tests": {
        "O-ALL": {
            "desc": "Testing all settings attributes collectively",
            "expected": "FILE",
            "code": "O.modes O.name O.repeat O.switches D.speeds S.commands"
        },
        "O-MODES": {
            "desc": "Testing settings mode attribute",
            "expected": "FILE",
            "code": "O.modes D.speeds"
        },
        "O-NAME": {
            "desc": "Testing settings mode attribute",
            "expected": "FILE",
            "code": "O.name"
        },
        "O-REPEAT": {
            "desc": "Testing settings mode attribute",
            "expected": "FILE",
            "code": "O.repeat"
        },
        "O-SWITCHES": {
            "desc": "Testing settings mode attribute",
            "expected": "FILE",
            "code": "O.SWITCHES S.commands"
        },

        "M-VECTORS": {
            "desc": "Testing whole vectors as inputs",
            "expected": "FILE",
            "code": "V.std M.vectors"
        },
        "M-LITERALS": {
            "desc": "Testing literals as inputs",
            "expected": "FILE",
            "code": "M.literals"
        },
        "M-INDICES": {
            "desc": "Testing elements of vectors using indices as inputs",
            "expected": "FILE",
            "code": "V.base V.delays I.types M.indices"
        },
        "M-IMPORTED": {
            "desc": "Testing calling imported functions",
            "expected": "FILE",
            "options": [["DEFAULT"], ["DEFAULT", "LOG_A"], ["HIGH"], ["HIGH", "LOG_A"]],
            "code": "V.base D.levels S.logs I.types I.basic M.imported-calls"
        },
        "M-EXPRESSIONS": {
            "desc": "Testing a variety of expressions",
            "expected": "FILE",
            "code": "M.expressions"
        },
        "M-CONDITIONAL": {
            "desc": "Testing conditionals",
            "expected": "FILE",
            "options": [["DEFAULT"], ["HIGH"], ["DEFAULT", "DO_A"], ["DEFAULT", "DO_B"], ["LOW", "DO_B"]],
            "code": "D.levels S.commands M.conditional"
        },
        "M-CALLS": {
            "desc": "Testing calling regular function calls",
            "expected": "FILE",
            "options": [["DEFAULT"], ["HIGH"], ["DEFAULT", "DO_A"], ["DEFAULT", "DO_B"], ["LOW", "DO_B"], ["FAST", "REPEAT"]],
            "code": "D.levels D.speeds V.delays S.commands F.delay F.expressions F.switches F.flags M.calls M.flags"
        },

        "M-VECTOR-ND": {
            "desc": "Testing error when vector is not defined",
            "expected": "ERROR",
            "code": "M.vectors"
        },
        "M-SWITCHES-ND": {
            "desc": "Testing error when vector is not defined",
            "expected": "ERROR",
            "code": "M.conditional"
        },
        "M-VECTORS-IE": {
            "desc": "Testing error from indices",
            "expected": "ERROR",
            "code": "V.off I.types M.indices"
        },
        "M-CALLS-ND": {
            "desc": "Testing error from calling non defined function",
            "expected": "ERROR",
            "code": "M.calls"
        },
        "M-FLAGS-ND": {
            "desc": "Testing error from calling non existent flag",
            "expected": "ERROR",
            "code": "D.levels D.speeds V.delays S.commands F.delay F.expressions F.switches F.flags M.calls"
        },
        "M-NO-IF": {
            "desc": "Testing error from calling non existent flag",
            "expected": "ERROR",
            "code": "M.no-if"
        },
        "M-REPEATED-CHAR": {
            "desc": "Testing error from calling non existent flag",
            "expected": "ERROR",
            "code": "M.repeated-char"
        },
        "M-NEGATIVE-DELAY": {
            "desc": "Testing error from calling non existent flag",
            "expected": "ERROR",
            "code": "M.negative-delay"
        },

        "A-SWITCH-TABS": {
            "desc": "Advanced - Testing switching tabs with func that takes argument",
            "expected": "FILE",
            "code": "F.switch-tabs M.switch-tabs"
        },
        "A-DRAW-TWO-SQUARES": {
            "desc": "Advanced - Testing drawing two squares with func that takes argument",
            "expected": "FILE",
            "code": "V.vertices F.draw-square M.draw-two-squares"
        },
        "A-DRAW-ERASE": {
            "desc": "Advanced - Testing drawing then erasing with funcs and @for loop",
            "expected": "FILE",
            "code": "V.vertices V.tool-locations F.draw-square F.choose-tool M.draw-erase"
        }
    },
    "code-blocks": "/code-blocks",
    "expected": "/expected",
    "dump-tests": "/cases",
    "dump-results": {
        "overview": "/results/overview.txt",
        "fail": "/results/fail.txt",
        "pass": "/results/pass.txt",
        "keyc": "/results/keyc-output"
    }
}